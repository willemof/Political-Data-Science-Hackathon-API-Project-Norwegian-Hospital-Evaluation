next
} else {
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(file.tmp)
print(" was skipped")
next
} else {
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(file.tmp)
print(" was skipped")
next
}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(file.tmp)
print(" was skipped")
next
}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(file.tmp + "was skipped")
next
}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(file.tmp, "was skipped")
next
}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
print(file.tmp was skipped)
print(file.tmp)+print(was skipped)
print(file.tmp, zero.print="was skipped"
)
print(c(file.tmp, "was skipped"))
print(c(file.tmp, was skipped))
print(c(file.tmp, was skipped))
print(c(file.tmp, was "skipped"))
print(c(file.tmp, "was skipped"))
print(c(file.tmp, noquote("was skipped"))
next
}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
#makes qi list out of csv files
qi_files <- list.files("./data/quality_indicators/",
full.names = TRUE)
#combines qis into a single dataset
qi <- lapply(qi_files, read_csv, show_col_types = FALSE)
qi <- bind_rows(qi)
#cleaning
clean_qi<- clean_names(qi)
#filtering
filter_qi <- clean_qi %>%
filter(period_type=="Årlig") %>%
filter(quality_indicator_name=="Reinnleggelse blant eldre pasienter 30 dager etter utskrivning fra sykehus") %>%
filter(parent_name == "Hele landet")# %>%
filter(location_name == "Helse Sør-Øst RHF")
qi_name_list <- tibble(datasett = unique(filter_qi$quality_indicator_name))
write.csv(qi_name_list, file = "./qi_name_list.csv")
print(c(file.tmp, noquote("was skipped"))
)
noquote("was skipped")
print(file.tmp noquote("was skipped"))
print(file.tmp) noquote("was skipped")
print(file.tmp)+ noquote("was skipped")
print(c(file.tmp, noquote("was skipped")))
noquote(print(c(file.tmp, noquote("was skipped"))))
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(print(c(file.tmp, noquote("was skipped"))))
next
}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(file.tmp)
print("was not skipped")
Sys.sleep(2+abs(rnorm(1)))
}
(file.exists(file.tmp)
)
noquote(c(file.tmp, noquote("was skipped")))
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
next
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
}
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))}
(file.exists(file.tmp)==FALSE)
file.exists(file.tmp)
file.exists(file.tmp)
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
}
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE)
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
next
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
}
for(i in 182:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
if(file.exists(file.tmp)==FALSE){
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
}
View(test)
View(test)
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
options(encoding="UTF-8")
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
for(i in 1:nrow(test)){
options(encoding="UTF-8")
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key), options(encoding="UTF-8")
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key), options(encoding="UTF-8")
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")),
options(encoding="UTF-8")%>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")),
options(encoding="UTF-8")%>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")),
options(encoding="UTF-8")%>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")), %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")), %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) %>%
options(encoding="UTF-8")
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE)
#for Loop that retrieves all quality indicators and saves them to data folder
#It's a 10 minute download.
httr_options(encoding="UTF-8"))
#for Loop that retrieves all quality indicators and saves them to data folder
#It's a 10 minute download.
httr_options(encoding="UTF-8")
#for Loop that retrieves all quality indicators and saves them to data folder
#It's a 10 minute download.
httr_options("UTF-8")
#for Loop that retrieves all quality indicators and saves them to data folder
#It's a 10 minute download.
httr_options("UTF-8")
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
noquote(c(file.tmp, noquote("was skipped")))
if(file.exists(file.tmp)){
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
noquote(c(file.tmp, noquote("was not skipped")))
Sys.sleep(2+abs(rnorm(1)))
}
}
print(noquote(c(file.tmp, noquote("was not skipped"))))
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(noquote(c(file.tmp, noquote("was skipped"))))
if(file.exists(file.tmp)){
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(noquote(c(file.tmp, noquote("was not skipped"))))
Sys.sleep(2+abs(rnorm(1)))
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(noquote(c(file.tmp, noquote("was skipped"))))
if(file.exists(file.tmp)){
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(noquote(c(file.tmp, noquote("was not skipped"))))
Sys.sleep(2+abs(rnorm(1)))
}
}
for(i in 1:nrow(test)){
tmp <- GET(test$fileUri[i],
add_headers("Ocp-Apim-Subscription-Key" = key),
add_headers("Cache-Control"= "no-cache")) %>%
content(as = "text") %>%
jsonlite::fromJSON(flatten = TRUE) # parsing to dataframe
file.tmp <- paste0("./data/quality_indicators/",
str_extract(test$fileName[i], "^[0-9]+"),
".csv")
if(file.exists(file.tmp)){
print(noquote(c(file.tmp, noquote("was skipped"))))
next}
write_csv(tmp$AttachmentDataRows, file.tmp)
print(noquote(c(file.tmp, noquote("was not skipped"))))
Sys.sleep(2+abs(rnorm(1)))
}
#makes qi list out of csv files
qi_files <- list.files("./data/quality_indicators/",
full.names = TRUE)
#combines qis into a single dataset
qi <- lapply(qi_files, read_csv, show_col_types = FALSE)
qi <- bind_rows(qi)
#cleaning
clean_qi<- clean_names(qi)
healther_region_qi <- filter_qi %>%
filter(location_name == "Helse Sør-Øst RHF")
#filtering
filter_qi <- clean_qi %>%
filter(period_type=="Årlig") %>%
filter(quality_indicator_name=="Reinnleggelse blant eldre pasienter 30 dager etter utskrivning fra sykehus") %>%
filter(parent_name == "Hele landet")
health_region_qi <- filter_qi %>%
filter(location_name == "Helse Sør-Øst RHF")
#generating a list of unique qi indicators
qi_name_list <- tibble(datasett = unique(filter_qi$quality_indicator_name))
write.csv(qi_name_list, file = "./qi_name_list.csv")
View(filter_qi)
View(filter_qi)
